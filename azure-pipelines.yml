# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - azure-pipelines-*

resources:
  containers:
  - container: dev1
    image: quay.io/deis/go-dev:v1.19.1

jobs:
- job: unit_tests
  pool:
    vmImage: 'Ubuntu-16.04'
  #container: dev1

  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/usr/local/go1.11' # Go installation path
    GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
    modulePath: '$(GOPATH)/src/github.com/Azure/azure-container-networking' # $(build.repository.name)' # Path to the module's code

  steps:
  - script: |
      echo $UID
      sudo apt-get update
      sudo apt-get install -y ebtables ipset python3-dev gcc
      sudo pip install coverage
    displayName: 'Install OS dependencies'
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'
  - script: |
      go get -v -t -d ./...
      if [ -f Gopkg.toml ]; then
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          dep ensure
      fi
      go get github.com/docker/libnetwork/driverapi
      go get github.com/gorilla/mux
      go get golang.org/x/tools/cmd/cover
    workingDirectory: '$(modulePath)'
    displayName: 'Install Go dependencies'
  - script: |
      go test ./ipam/ -coverprofile coverage-ipam.out
      go test ./log/ -coverprofile coverage-log.out
      go test ./netlink/ -coverprofile coverage-netlink.out
      go test ./store/ -coverprofile coverage-store.out
      go test ./telemetry/ -coverprofile coverage-telemetry.out
      go test ./cnm/network/ -coverprofile coverage-network.out
      go test ./cni/ipam/ -coverprofile coverage-ipam.out
      go test ./cns/ipamclient/ -coverprofile coverage-ipamclient.out
      go test ./npm/iptm/ -coverprofile coverage-iptm.out
      go test ./npm/ipsm/ -coverprofile coverage-ipsm.out
      go test ./npm/ -coverprofile coverage-npm.out
      #sudo -E env "PATH=$PATH" go test ./cns/restserver/ -coverprofile coverage-restserver.out
      bash <(curl -s https://codecov.io/bash)
    workingDirectory: '$(modulePath)'
    displayName: 'Run test'